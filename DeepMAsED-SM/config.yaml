# Input
## example of creating simulated assemblies from genomes
genomes_file: tests/data/genome_download_n10.tsv

# Output location
output_dir: tests/output_n10/

# temporary output location (eg., /tmp/ or /dev/shm/)
tmp_dir: tests/output_n10_TMP/

# email notifications on job failure and success (Use 'Skip' for no emails)
email: Skip

# software parameters
## Use "Skip" to skip  steps. If no params for rule, use ""
## `reps:` is the number of replicate simulations
## If `keep_reads: True`, then simulated reads are kept
params:
  # ionice for reducing I/O (use -c 2 for normal I/O)
  ionice: -c 3
  # simulating metagenomes
  reps: 2
  MGSIM:
    genome_download: ""
    communities: --richness 1   #eg., --shared-perc 80 --perm-perc 100
    reads: --sr-seq-depth 5e2 --art-paired --art-mflen 250  
  keep_reads: False
  # coverage
  nonpareil: -T kmer
  nonpareil_summary: 1e9   # this is target seq. depth
  # assemblying metagenomes
  assemblers:
    metaspades: -k auto --only-assembler
    megahit: --min-count 3 --min-contig-len 1000 --presets meta-sensitive
  # assembly filtering
  contig_length_cutoff: 1000       # length in bp 
  # assessing assembly errors
  minimap2: ""
  metaquast: --min-contig 1000 --min-identity 95 --extensive-mis-size 100 --no-html --no-plots --no-icarus --no-gc --no-snps --no-sv
  # mapping reads to contigs
  samtools: ""
  # creating DL features
  make_features: ""
  # state-of-the-art
  ## ALE
  ALE: ""
  ## VALET
  VALET: ""
  
# snakemake pipeline
pipeline:
  snakemake_folder: ./
  script_folder: ./bin/scripts/
  rnd_seed: 9384